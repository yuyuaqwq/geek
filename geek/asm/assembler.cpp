#include "assembler_impl.h"

#include <mutex>

#include "asm/assembler/asm_op_defs_impl.h"
#include "utils/debug.h"

#define MAKE_RET(e) \
	Error err{ FromAsmJit(static_cast<asmjit::ErrorCode>(impl_->assembler_.e)) }; \
	if (impl_->config_.assert_every_inst) { \
		GEEK_ASSERT(err.IsSuccess(), "Assembler make instruction failed:", err.msg()); \
	} \
	return err

#define _GEEK_ASM_INST_0X_IMPL(op)								\
	_GEEK_ASM_INST_0X(Assembler::op) {							\
		MAKE_RET(op());		\
	}

#define _GEEK_ASM_INST_1X_IMPL(op, t0)								\
	_GEEK_ASM_INST_1X(Assembler::op, t0) {							\
		MAKE_RET(op(ToAsmJit(o0)));\
	}

#define _GEEK_ASM_INST_2X_IMPL(op, t0, t1)											\
	_GEEK_ASM_INST_2X(Assembler::op, t0, t1) {										\
		MAKE_RET(op(ToAsmJit(o0), ToAsmJit(o1)));	\
	}

#define _GEEK_ASM_INST_3X_IMPL(op, t0, t1, t2)													\
	_GEEK_ASM_INST_3X(Assembler::op, t0, t1, t2) {												\
		MAKE_RET(op(ToAsmJit(o0), ToAsmJit(o1), ToAsmJit(o2)));\
	}

#define _GEEK_ASM_INST_4X_IMPL(op, t0, t1, t2, t3)													\
	_GEEK_ASM_INST_4X(Assembler::op, t0, t1, t2, t3) {												\
		MAKE_RET(op(ToAsmJit(o0), ToAsmJit(o1), ToAsmJit(o2), ToAsmJit(o3)));\
	}

#define _GEEK_ASM_INST_5X_IMPL(op, t0, t1, t2, t3, t4)													\
	_GEEK_ASM_INST_5X(Assembler::op, t0, t1, t2, t3, t4) {												\
		MAKE_RET(op(ToAsmJit(o0), ToAsmJit(o1), ToAsmJit(o2), ToAsmJit(o3), ToAsmJit(o4)));\
	}

#define _GEEK_ASM_INST_6X_IMPL(op, t0, t1, t2, t3, t4, t5)													\
	_GEEK_ASM_INST_6X(Assembler::op, t0, t1, t2, t3, t4, t5) {												\
		MAKE_RET(op(ToAsmJit(o0), ToAsmJit(o1), ToAsmJit(o2), ToAsmJit(o3), ToAsmJit(o4), ToAsmJit(o5)));\
	}

#define _GEEK_ASM_INST_1C_IMPL(op, t0)	\
  _GEEK_ASM_INST_1X_IMPL(op##a, t0);		\
  _GEEK_ASM_INST_1X_IMPL(op##ae, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##b, t0);		\
  _GEEK_ASM_INST_1X_IMPL(op##be, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##c, t0);		\
  _GEEK_ASM_INST_1X_IMPL(op##e, t0);		\
  _GEEK_ASM_INST_1X_IMPL(op##g, t0);		\
  _GEEK_ASM_INST_1X_IMPL(op##ge, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##l, t0);		\
  _GEEK_ASM_INST_1X_IMPL(op##le, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##na, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##nae, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##nb, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##nbe, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##nc, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##ne, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##ng, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##nge, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##nl, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##nle, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##no, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##np, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##ns, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##nz, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##o, t0);		\
  _GEEK_ASM_INST_1X_IMPL(op##p, t0);		\
  _GEEK_ASM_INST_1X_IMPL(op##pe, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##po, t0);	\
  _GEEK_ASM_INST_1X_IMPL(op##s, t0);		\
  _GEEK_ASM_INST_1X_IMPL(op##z, t0)

namespace geek {
namespace {
asmjit::JitRuntime* Runtime() {
	static asmjit::JitRuntime inst;
	return &inst;
}
}

Assembler::~Assembler() {}

void Assembler::FuncDeleter::operator()(void* ptr) const { Runtime()->release(ptr); }

Assembler::Assembler(Arch arch) { impl_ = std::make_unique<Impl>(this, arch, Runtime()); }

Arch Assembler::GetArch() const { return impl_->arch_; }

const Assembler::Config& Assembler::GetConfig() const { return impl_->config_; }
Assembler::Config& Assembler::GetConfig() { return impl_->config_; }

asm_op::Label Assembler::NewLabel() {
	asm_op::Label ret;
	ret.impl_ = std::make_unique<asm_op::Label::Impl>(impl_->assembler_.newLabel());
	return ret;
}

asm_op::Label Assembler::NewNamedLabel(std::string_view name, asm_op::Label::Type type) {
	asm_op::Label ret;
	ret.impl_ = std::make_unique<asm_op::Label::Impl>(
		impl_->assembler_.newNamedLabel(name.data(), name.size(), ToAsmJit(type)));
	return ret;
}

Assembler::Error Assembler::bind(const asm_op::Label& label) {
	auto e = impl_->assembler_.bind(ToAsmJit(label));
	return FromAsmJit(static_cast<asmjit::ErrorCode>(e));
}

size_t Assembler::CodeSize() const { return impl_->code_.codeSize(); }

const uint8_t* Assembler::CodeBuffer() const { return impl_->code_.sectionById(0)->data(); }

size_t Assembler::PackCodeTo(uint8_t* ptr, size_t size, uint64_t base_address) const {
	auto ec = impl_->code_.relocateToBase(base_address);
	Error err = FromAsmJit(static_cast<asmjit::ErrorCode>(ec));
	GEEK_ASSERT(err.IsSuccess(), "Assembler relocate code to base failed:", err.msg());

	auto s = std::min(size, CodeSize());
	memcpy(ptr, CodeBuffer(), s);
	return s;
}

std::unique_ptr<void, Assembler::FuncDeleter> Assembler::PackToFuncImpl() const {
	void* func;
	Runtime()->add(&func, &impl_->code_);
	return std::unique_ptr<void, FuncDeleter>(func);
}

Assembler::Error::Error(ErrorCode code)
	: code_(code) {}

std::string Assembler::Error::msg() const { return asmjit::DebugUtils::errorAsString(ToAsmJit(code_)); }

bool Assembler::Error::IsSuccess() const { return code() == kErrorOk; }

_GEEK_ASM_INST_0X_IMPL(cbw)
_GEEK_ASM_INST_0X_IMPL(cdq)
_GEEK_ASM_INST_0X_IMPL(cdqe)
_GEEK_ASM_INST_2X_IMPL(cmpxchg, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(cmpxchg, Mem, Gp)
_GEEK_ASM_INST_1X_IMPL(cmpxchg16b, Mem)
_GEEK_ASM_INST_1X_IMPL(cmpxchg8b, Mem)
_GEEK_ASM_INST_0X_IMPL(cqo)
_GEEK_ASM_INST_0X_IMPL(cwd)
_GEEK_ASM_INST_0X_IMPL(cwde)
_GEEK_ASM_INST_1X_IMPL(div, Gp)
_GEEK_ASM_INST_1X_IMPL(div, Mem)
_GEEK_ASM_INST_1X_IMPL(idiv, Gp)
_GEEK_ASM_INST_1X_IMPL(idiv, Mem)
_GEEK_ASM_INST_1X_IMPL(imul, Gp)
_GEEK_ASM_INST_1X_IMPL(imul, Mem)
_GEEK_ASM_INST_0X_IMPL(iret)
_GEEK_ASM_INST_0X_IMPL(iretd)
_GEEK_ASM_INST_0X_IMPL(iretq)
_GEEK_ASM_INST_1X_IMPL(jecxz, Label)
_GEEK_ASM_INST_1X_IMPL(jecxz, Imm)
_GEEK_ASM_INST_1X_IMPL(loop, Label)
_GEEK_ASM_INST_1X_IMPL(loop, Imm)
_GEEK_ASM_INST_1X_IMPL(loope, Label)
_GEEK_ASM_INST_1X_IMPL(loope, Imm)
_GEEK_ASM_INST_1X_IMPL(loopne, Label)
_GEEK_ASM_INST_1X_IMPL(loopne, Imm)
_GEEK_ASM_INST_1X_IMPL(mul, Gp)
_GEEK_ASM_INST_1X_IMPL(mul, Mem)
_GEEK_ASM_INST_0X_IMPL(ret)
_GEEK_ASM_INST_1X_IMPL(ret, Imm)
_GEEK_ASM_INST_0X_IMPL(retf)
_GEEK_ASM_INST_1X_IMPL(retf, Imm)
_GEEK_ASM_INST_0X_IMPL(xlatb)


_GEEK_ASM_INST_2X_IMPL(adc, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(adc, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(adc, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(adc, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(adc, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(add, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(add, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(add, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(add, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(add, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(and_, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(and_, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(and_, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(and_, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(and_, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(bound, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(bsf, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(bsf, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(bsr, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(bsr, Gp, Mem)
_GEEK_ASM_INST_1X_IMPL(bswap, Gp)
_GEEK_ASM_INST_2X_IMPL(bt, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(bt, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(bt, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(bt, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(btc, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(btc, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(btc, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(btc, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(btr, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(btr, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(btr, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(btr, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(bts, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(bts, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(bts, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(bts, Mem, Imm)
_GEEK_ASM_INST_1X_IMPL(cbw, Gp_AX)
_GEEK_ASM_INST_2X_IMPL(cdq, Gp_EDX, Gp_EAX)
_GEEK_ASM_INST_1X_IMPL(cdqe, Gp_EAX)
_GEEK_ASM_INST_2X_IMPL(cqo, Gp_RDX, Gp_RAX)
_GEEK_ASM_INST_2X_IMPL(cwd, Gp_DX, Gp_AX)
_GEEK_ASM_INST_1X_IMPL(cwde, Gp_EAX)
_GEEK_ASM_INST_1X_IMPL(call, Gp)
_GEEK_ASM_INST_1X_IMPL(call, Mem)
_GEEK_ASM_INST_1X_IMPL(call, Label)
_GEEK_ASM_INST_1X_IMPL(call, Imm)

_GEEK_ASM_INST_2X_IMPL(cmp, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(cmp, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(cmp, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(cmp, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(cmp, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(cmps, DS_ZSI, ES_ZDI)

_GEEK_ASM_INST_1X_IMPL(dec, Gp)
_GEEK_ASM_INST_1X_IMPL(dec, Mem)
_GEEK_ASM_INST_2X_IMPL(div, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(div, Gp, Mem)
_GEEK_ASM_INST_3X_IMPL(div, Gp, Gp, Gp)
_GEEK_ASM_INST_3X_IMPL(div, Gp, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(idiv, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(idiv, Gp, Mem)
_GEEK_ASM_INST_3X_IMPL(idiv, Gp, Gp, Gp)
_GEEK_ASM_INST_3X_IMPL(idiv, Gp, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(imul, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(imul, Gp, Mem)
_GEEK_ASM_INST_3X_IMPL(imul, Gp, Gp, Imm)
_GEEK_ASM_INST_3X_IMPL(imul, Gp, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(imul, Gp, Gp, Gp)
_GEEK_ASM_INST_3X_IMPL(imul, Gp, Gp, Mem)
_GEEK_ASM_INST_1X_IMPL(inc, Gp)
_GEEK_ASM_INST_1X_IMPL(inc, Mem)
_GEEK_ASM_INST_1C_IMPL(j, Label);
_GEEK_ASM_INST_1C_IMPL(j, Imm);
_GEEK_ASM_INST_2X_IMPL(jecxz, Gp, Label)
_GEEK_ASM_INST_2X_IMPL(jecxz, Gp, Imm)
_GEEK_ASM_INST_1X_IMPL(jmp, Gp)
_GEEK_ASM_INST_1X_IMPL(jmp, Mem)
_GEEK_ASM_INST_1X_IMPL(jmp, Label)
_GEEK_ASM_INST_1X_IMPL(jmp, Imm)
_GEEK_ASM_INST_2X_IMPL(lcall, Imm, Imm)
_GEEK_ASM_INST_1X_IMPL(lcall, Mem)
_GEEK_ASM_INST_2X_IMPL(lea, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(ljmp, Imm, Imm)
_GEEK_ASM_INST_1X_IMPL(ljmp, Mem)
_GEEK_ASM_INST_2X_IMPL(lods, Gp_ZAX, DS_ZSI)
_GEEK_ASM_INST_2X_IMPL(loop, Gp_ZCX, Label)
_GEEK_ASM_INST_2X_IMPL(loop, Gp_ZCX, Imm)
_GEEK_ASM_INST_2X_IMPL(loope, Gp_ZCX, Label)
_GEEK_ASM_INST_2X_IMPL(loope, Gp_ZCX, Imm)
_GEEK_ASM_INST_2X_IMPL(loopne, Gp_ZCX, Label)
_GEEK_ASM_INST_2X_IMPL(loopne, Gp_ZCX, Imm)
_GEEK_ASM_INST_2X_IMPL(mov, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(mov, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(mov, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(mov, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(mov, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(mov, Gp, CReg)
_GEEK_ASM_INST_2X_IMPL(mov, CReg, Gp)
_GEEK_ASM_INST_2X_IMPL(mov, Gp, DReg)
_GEEK_ASM_INST_2X_IMPL(mov, DReg, Gp)
_GEEK_ASM_INST_2X_IMPL(mov, Gp, SReg)
_GEEK_ASM_INST_2X_IMPL(mov, Mem, SReg)
_GEEK_ASM_INST_2X_IMPL(mov, SReg, Gp)
_GEEK_ASM_INST_2X_IMPL(mov, SReg, Mem)
_GEEK_ASM_INST_2X_IMPL(movabs, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(movabs, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(movabs, Mem, Gp)

_GEEK_ASM_INST_2X_IMPL(movs, ES_ZDI, DS_ZSI)
_GEEK_ASM_INST_2X_IMPL(movsx, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(movsx, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(movsxd, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(movsxd, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(movzx, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(movzx, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(mul, Gp_AX, Gp)
_GEEK_ASM_INST_2X_IMPL(mul, Gp_AX, Mem)
_GEEK_ASM_INST_3X_IMPL(mul, Gp_ZDX, Gp_ZAX, Gp)
_GEEK_ASM_INST_3X_IMPL(mul, Gp_ZDX, Gp_ZAX, Mem)
_GEEK_ASM_INST_1X_IMPL(neg, Gp)
_GEEK_ASM_INST_1X_IMPL(neg, Mem)
_GEEK_ASM_INST_0X_IMPL(nop)
_GEEK_ASM_INST_1X_IMPL(nop, Gp)
_GEEK_ASM_INST_1X_IMPL(nop, Mem)
_GEEK_ASM_INST_2X_IMPL(nop, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(nop, Mem, Gp)
_GEEK_ASM_INST_1X_IMPL(not_, Gp)
_GEEK_ASM_INST_1X_IMPL(not_, Mem)
_GEEK_ASM_INST_2X_IMPL(or_, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(or_, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(or_, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(or_, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(or_, Mem, Imm)
_GEEK_ASM_INST_1X_IMPL(pop, Gp)
_GEEK_ASM_INST_1X_IMPL(pop, Mem)
_GEEK_ASM_INST_1X_IMPL(pop, SReg)
_GEEK_ASM_INST_0X_IMPL(popa)
_GEEK_ASM_INST_0X_IMPL(popad)
_GEEK_ASM_INST_0X_IMPL(popf)
_GEEK_ASM_INST_0X_IMPL(popfd)
_GEEK_ASM_INST_0X_IMPL(popfq)
_GEEK_ASM_INST_1X_IMPL(push, Gp)
_GEEK_ASM_INST_1X_IMPL(push, Mem)
_GEEK_ASM_INST_1X_IMPL(push, SReg)
_GEEK_ASM_INST_1X_IMPL(push, Imm)
_GEEK_ASM_INST_0X_IMPL(pusha)
_GEEK_ASM_INST_0X_IMPL(pushad)
_GEEK_ASM_INST_0X_IMPL(pushf)
_GEEK_ASM_INST_0X_IMPL(pushfd)
_GEEK_ASM_INST_0X_IMPL(pushfq)
_GEEK_ASM_INST_2X_IMPL(rcl, Gp, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(rcl, Mem, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(rcl, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(rcl, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(rcr, Gp, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(rcr, Mem, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(rcr, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(rcr, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(rol, Gp, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(rol, Mem, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(rol, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(rol, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(ror, Gp, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(ror, Mem, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(ror, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(ror, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(sbb, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(sbb, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(sbb, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(sbb, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(sbb, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(sal, Gp, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(sal, Mem, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(sal, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(sal, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(sar, Gp, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(sar, Mem, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(sar, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(sar, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(scas, Gp_ZAX, ES_ZDI)
_GEEK_ASM_INST_1C_IMPL(set, Gp);
_GEEK_ASM_INST_1C_IMPL(set, Mem);
_GEEK_ASM_INST_2X_IMPL(shl, Gp, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(shl, Mem, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(shl, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(shl, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(shr, Gp, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(shr, Mem, Gp_CL)
_GEEK_ASM_INST_2X_IMPL(shr, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(shr, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(shld, Gp, Gp, Gp_CL)
_GEEK_ASM_INST_3X_IMPL(shld, Mem, Gp, Gp_CL)
_GEEK_ASM_INST_3X_IMPL(shld, Gp, Gp, Imm)
_GEEK_ASM_INST_3X_IMPL(shld, Mem, Gp, Imm)
_GEEK_ASM_INST_3X_IMPL(shrd, Gp, Gp, Gp_CL)
_GEEK_ASM_INST_3X_IMPL(shrd, Mem, Gp, Gp_CL)
_GEEK_ASM_INST_3X_IMPL(shrd, Gp, Gp, Imm)
_GEEK_ASM_INST_3X_IMPL(shrd, Mem, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(stos, ES_ZDI, Gp_ZAX)
_GEEK_ASM_INST_2X_IMPL(sub, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(sub, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(sub, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(sub, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(sub, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(test, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(test, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(test, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(test, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(ud0, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(ud0, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(ud1, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(ud1, Gp, Mem)
_GEEK_ASM_INST_0X_IMPL(ud2)
_GEEK_ASM_INST_2X_IMPL(xadd, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(xadd, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(xchg, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(xchg, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(xchg, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(xor_, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(xor_, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(xor_, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(xor_, Mem, Gp)
_GEEK_ASM_INST_2X_IMPL(xor_, Mem, Imm)

//! \name Deprecated 32-bit Instructions
//! \{

_GEEK_ASM_INST_1X_IMPL(aaa, Gp)
_GEEK_ASM_INST_2X_IMPL(aad, Gp, Imm)
_GEEK_ASM_INST_2X_IMPL(aam, Gp, Imm)
_GEEK_ASM_INST_1X_IMPL(aas, Gp)
_GEEK_ASM_INST_1X_IMPL(daa, Gp)
_GEEK_ASM_INST_1X_IMPL(das, Gp)

//! \name ENTER/LEAVE Instructions
//! \{

_GEEK_ASM_INST_2X_IMPL(enter, Imm, Imm)
_GEEK_ASM_INST_0X_IMPL(leave)

//! \name IN/OUT Instructions
//! \{

// NOTE: For some reason Doxygen is messed up here and thinks we are in cond.

_GEEK_ASM_INST_2X_IMPL(in, Gp_ZAX, Imm)
_GEEK_ASM_INST_2X_IMPL(in, Gp_ZAX, Gp_DX)
_GEEK_ASM_INST_2X_IMPL(ins, ES_ZDI, Gp_DX)
_GEEK_ASM_INST_2X_IMPL(out, Imm, Gp_ZAX)
_GEEK_ASM_INST_2X_IMPL(out, Gp_DX, Gp_ZAX)
_GEEK_ASM_INST_2X_IMPL(outs, Gp_DX, DS_ZSI)

//! \name Clear/Set CF/DF Instructions
//! \{

_GEEK_ASM_INST_0X_IMPL(clc)
_GEEK_ASM_INST_0X_IMPL(cld)
_GEEK_ASM_INST_0X_IMPL(cmc)
_GEEK_ASM_INST_0X_IMPL(stc)
_GEEK_ASM_INST_0X_IMPL(std)


_GEEK_ASM_INST_2X_IMPL(arpl, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(arpl, Mem, Gp)
_GEEK_ASM_INST_0X_IMPL(cli)
_GEEK_ASM_INST_0X_IMPL(getsec)
_GEEK_ASM_INST_1X_IMPL(int_, Imm)
_GEEK_ASM_INST_0X_IMPL(int3)
_GEEK_ASM_INST_0X_IMPL(into)
_GEEK_ASM_INST_2X_IMPL(lar, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(lar, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(lds, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(les, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(lfs, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(lgs, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(lsl, Gp, Gp)
_GEEK_ASM_INST_2X_IMPL(lsl, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(lss, Gp, Mem)
_GEEK_ASM_INST_0X_IMPL(pause)
_GEEK_ASM_INST_0X_IMPL(rsm)
_GEEK_ASM_INST_1X_IMPL(sgdt, Mem)
_GEEK_ASM_INST_1X_IMPL(sidt, Mem)
_GEEK_ASM_INST_1X_IMPL(sldt, Gp)
_GEEK_ASM_INST_1X_IMPL(sldt, Mem)
_GEEK_ASM_INST_1X_IMPL(smsw, Gp)
_GEEK_ASM_INST_1X_IMPL(smsw, Mem)
_GEEK_ASM_INST_0X_IMPL(sti)
_GEEK_ASM_INST_1X_IMPL(str, Gp)
_GEEK_ASM_INST_1X_IMPL(str, Mem)
_GEEK_ASM_INST_1X_IMPL(verr, Gp)
_GEEK_ASM_INST_1X_IMPL(verr, Mem)
_GEEK_ASM_INST_1X_IMPL(verw, Gp)
_GEEK_ASM_INST_1X_IMPL(verw, Mem)

//! \name Core Privileged Instructions
//! \{

_GEEK_ASM_INST_0X_IMPL(clts)
_GEEK_ASM_INST_0X_IMPL(hlt)
_GEEK_ASM_INST_0X_IMPL(invd)
_GEEK_ASM_INST_1X_IMPL(invlpg, Mem)
_GEEK_ASM_INST_2X_IMPL(invpcid, Gp, Mem)
_GEEK_ASM_INST_1X_IMPL(lgdt, Mem)
_GEEK_ASM_INST_1X_IMPL(lidt, Mem)
_GEEK_ASM_INST_1X_IMPL(lldt, Gp)
_GEEK_ASM_INST_1X_IMPL(lldt, Mem)
_GEEK_ASM_INST_1X_IMPL(lmsw, Gp)
_GEEK_ASM_INST_1X_IMPL(lmsw, Mem)
_GEEK_ASM_INST_1X_IMPL(ltr, Gp)
_GEEK_ASM_INST_1X_IMPL(ltr, Mem)
_GEEK_ASM_INST_3X_IMPL(rdmsr, Gp_EDX, Gp_EAX, Gp_ECX)
_GEEK_ASM_INST_3X_IMPL(rdpmc, Gp_EDX, Gp_EAX, Gp_ECX)
_GEEK_ASM_INST_0X_IMPL(swapgs)
_GEEK_ASM_INST_0X_IMPL(wbinvd)
_GEEK_ASM_INST_0X_IMPL(wbnoinvd)
_GEEK_ASM_INST_3X_IMPL(wrmsr, Gp_EDX, Gp_EAX, Gp_ECX)
_GEEK_ASM_INST_3X_IMPL(xsetbv, Gp_EDX, Gp_EAX, Gp_ECX)


//! \name FPU Instructions
//! \{

_GEEK_ASM_INST_0X_IMPL(f2xm1)
_GEEK_ASM_INST_0X_IMPL(fabs)
_GEEK_ASM_INST_2X_IMPL(fadd, St, St)
_GEEK_ASM_INST_1X_IMPL(fadd, Mem)
_GEEK_ASM_INST_1X_IMPL(faddp, St)
_GEEK_ASM_INST_0X_IMPL(faddp)
_GEEK_ASM_INST_1X_IMPL(fbld, Mem)
_GEEK_ASM_INST_1X_IMPL(fbstp, Mem)
_GEEK_ASM_INST_0X_IMPL(fchs)
_GEEK_ASM_INST_0X_IMPL(fclex)
_GEEK_ASM_INST_1X_IMPL(fcmovb, St)
_GEEK_ASM_INST_1X_IMPL(fcmovbe, St)
_GEEK_ASM_INST_1X_IMPL(fcmove, St)
_GEEK_ASM_INST_1X_IMPL(fcmovnb, St)
_GEEK_ASM_INST_1X_IMPL(fcmovnbe, St)
_GEEK_ASM_INST_1X_IMPL(fcmovne, St)
_GEEK_ASM_INST_1X_IMPL(fcmovnu, St)
_GEEK_ASM_INST_1X_IMPL(fcmovu, St)
_GEEK_ASM_INST_1X_IMPL(fcom, St)
_GEEK_ASM_INST_0X_IMPL(fcom)
_GEEK_ASM_INST_1X_IMPL(fcom, Mem)
_GEEK_ASM_INST_1X_IMPL(fcomp, St)
_GEEK_ASM_INST_0X_IMPL(fcomp)
_GEEK_ASM_INST_1X_IMPL(fcomp, Mem)
_GEEK_ASM_INST_0X_IMPL(fcompp)
_GEEK_ASM_INST_1X_IMPL(fcomi, St)
_GEEK_ASM_INST_1X_IMPL(fcomip, St)
_GEEK_ASM_INST_0X_IMPL(fcos)
_GEEK_ASM_INST_0X_IMPL(fdecstp)
_GEEK_ASM_INST_2X_IMPL(fdiv, St, St)
_GEEK_ASM_INST_1X_IMPL(fdiv, Mem)
_GEEK_ASM_INST_1X_IMPL(fdivp, St)
_GEEK_ASM_INST_0X_IMPL(fdivp)
_GEEK_ASM_INST_2X_IMPL(fdivr, St, St)
_GEEK_ASM_INST_1X_IMPL(fdivr, Mem)
_GEEK_ASM_INST_1X_IMPL(fdivrp, St)
_GEEK_ASM_INST_0X_IMPL(fdivrp)
_GEEK_ASM_INST_1X_IMPL(ffree, St)
_GEEK_ASM_INST_1X_IMPL(fiadd, Mem)
_GEEK_ASM_INST_1X_IMPL(ficom, Mem)
_GEEK_ASM_INST_1X_IMPL(ficomp, Mem)
_GEEK_ASM_INST_1X_IMPL(fidiv, Mem)
_GEEK_ASM_INST_1X_IMPL(fidivr, Mem)
_GEEK_ASM_INST_1X_IMPL(fild, Mem)
_GEEK_ASM_INST_1X_IMPL(fimul, Mem)
_GEEK_ASM_INST_0X_IMPL(fincstp)
_GEEK_ASM_INST_0X_IMPL(finit)
_GEEK_ASM_INST_1X_IMPL(fisub, Mem)
_GEEK_ASM_INST_1X_IMPL(fisubr, Mem)
_GEEK_ASM_INST_0X_IMPL(fninit)
_GEEK_ASM_INST_1X_IMPL(fist, Mem)
_GEEK_ASM_INST_1X_IMPL(fistp, Mem)
_GEEK_ASM_INST_1X_IMPL(fisttp, Mem)
_GEEK_ASM_INST_1X_IMPL(fld, Mem)
_GEEK_ASM_INST_1X_IMPL(fld, St)
_GEEK_ASM_INST_0X_IMPL(fld1)
_GEEK_ASM_INST_0X_IMPL(fldl2t)
_GEEK_ASM_INST_0X_IMPL(fldl2e)
_GEEK_ASM_INST_0X_IMPL(fldpi)
_GEEK_ASM_INST_0X_IMPL(fldlg2)
_GEEK_ASM_INST_0X_IMPL(fldln2)
_GEEK_ASM_INST_0X_IMPL(fldz)
_GEEK_ASM_INST_1X_IMPL(fldcw, Mem)
_GEEK_ASM_INST_1X_IMPL(fldenv, Mem)
_GEEK_ASM_INST_2X_IMPL(fmul, St, St)
_GEEK_ASM_INST_1X_IMPL(fmul, Mem)
_GEEK_ASM_INST_1X_IMPL(fmulp, St)
_GEEK_ASM_INST_0X_IMPL(fmulp)
_GEEK_ASM_INST_0X_IMPL(fnclex)
_GEEK_ASM_INST_0X_IMPL(fnop)
_GEEK_ASM_INST_1X_IMPL(fnsave, Mem)
_GEEK_ASM_INST_1X_IMPL(fnstenv, Mem)
_GEEK_ASM_INST_1X_IMPL(fnstcw, Mem)
_GEEK_ASM_INST_0X_IMPL(fpatan)
_GEEK_ASM_INST_0X_IMPL(fprem)
_GEEK_ASM_INST_0X_IMPL(fprem1)
_GEEK_ASM_INST_0X_IMPL(fptan)
_GEEK_ASM_INST_0X_IMPL(frndint)
_GEEK_ASM_INST_1X_IMPL(frstor, Mem)
_GEEK_ASM_INST_1X_IMPL(fsave, Mem)
_GEEK_ASM_INST_0X_IMPL(fscale)
_GEEK_ASM_INST_0X_IMPL(fsin)
_GEEK_ASM_INST_0X_IMPL(fsincos)
_GEEK_ASM_INST_0X_IMPL(fsqrt)
_GEEK_ASM_INST_1X_IMPL(fst, Mem)
_GEEK_ASM_INST_1X_IMPL(fst, St)
_GEEK_ASM_INST_1X_IMPL(fstp, Mem)
_GEEK_ASM_INST_1X_IMPL(fstp, St)
_GEEK_ASM_INST_1X_IMPL(fstcw, Mem)
_GEEK_ASM_INST_1X_IMPL(fstenv, Mem)
_GEEK_ASM_INST_2X_IMPL(fsub, St, St)
_GEEK_ASM_INST_1X_IMPL(fsub, Mem)
_GEEK_ASM_INST_1X_IMPL(fsubp, St)
_GEEK_ASM_INST_0X_IMPL(fsubp)
_GEEK_ASM_INST_2X_IMPL(fsubr, St, St)
_GEEK_ASM_INST_1X_IMPL(fsubr, Mem)
_GEEK_ASM_INST_1X_IMPL(fsubrp, St)
_GEEK_ASM_INST_0X_IMPL(fsubrp)
_GEEK_ASM_INST_0X_IMPL(ftst)
_GEEK_ASM_INST_1X_IMPL(fucom, St)
_GEEK_ASM_INST_0X_IMPL(fucom)
_GEEK_ASM_INST_1X_IMPL(fucomi, St)
_GEEK_ASM_INST_1X_IMPL(fucomip, St)
_GEEK_ASM_INST_1X_IMPL(fucomp, St)
_GEEK_ASM_INST_0X_IMPL(fucomp)
_GEEK_ASM_INST_0X_IMPL(fucompp)
_GEEK_ASM_INST_0X_IMPL(fwait)
_GEEK_ASM_INST_0X_IMPL(fxam)
_GEEK_ASM_INST_1X_IMPL(fxch, St)
_GEEK_ASM_INST_0X_IMPL(fxtract)
_GEEK_ASM_INST_0X_IMPL(fyl2x)
_GEEK_ASM_INST_0X_IMPL(fyl2xp1)
_GEEK_ASM_INST_1X_IMPL(fstsw, Gp)
_GEEK_ASM_INST_1X_IMPL(fstsw, Mem)
_GEEK_ASM_INST_1X_IMPL(fnstsw, Gp)
_GEEK_ASM_INST_1X_IMPL(fnstsw, Mem)

//! \name MMX & SSE+ Instructions
//! \{

_GEEK_ASM_INST_2X_IMPL(addpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(addpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(addps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(addps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(addsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(addsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(addss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(addss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(addsubpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(addsubpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(addsubps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(addsubps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(andnpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(andnpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(andnps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(andnps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(andpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(andpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(andps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(andps, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(blendpd, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(blendpd, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(blendps, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(blendps, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(blendvpd, Xmm, Xmm, XMM0)
_GEEK_ASM_INST_3X_IMPL(blendvpd, Xmm, Mem, XMM0)
_GEEK_ASM_INST_3X_IMPL(blendvps, Xmm, Xmm, XMM0)
_GEEK_ASM_INST_3X_IMPL(blendvps, Xmm, Mem, XMM0)
_GEEK_ASM_INST_3X_IMPL(cmppd, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(cmppd, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(cmpps, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(cmpps, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(cmpsd, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(cmpsd, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(cmpss, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(cmpss, Xmm, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(comisd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(comisd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(comiss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(comiss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtdq2pd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtdq2pd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtdq2ps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtdq2ps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtpd2dq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtpd2dq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtpd2pi, Mm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtpd2pi, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtpd2ps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtpd2ps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtpi2pd, Xmm, Mm)
_GEEK_ASM_INST_2X_IMPL(cvtpi2pd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtpi2ps, Xmm, Mm)
_GEEK_ASM_INST_2X_IMPL(cvtpi2ps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtps2dq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtps2dq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtps2pd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtps2pd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtps2pi, Mm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtps2pi, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtsd2si, Gp, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtsd2si, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtsd2ss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtsd2ss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtsi2sd, Xmm, Gp)
_GEEK_ASM_INST_2X_IMPL(cvtsi2sd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtsi2ss, Xmm, Gp)
_GEEK_ASM_INST_2X_IMPL(cvtsi2ss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtss2sd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtss2sd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvtss2si, Gp, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvtss2si, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(cvttpd2pi, Mm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvttpd2pi, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvttpd2dq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvttpd2dq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvttps2dq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvttps2dq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvttps2pi, Mm, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvttps2pi, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(cvttsd2si, Gp, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvttsd2si, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(cvttss2si, Gp, Xmm)
_GEEK_ASM_INST_2X_IMPL(cvttss2si, Gp, Mem)
_GEEK_ASM_INST_2X_IMPL(divpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(divpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(divps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(divps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(divsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(divsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(divss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(divss, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(dppd, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(dppd, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(dpps, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(dpps, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(extractps, Gp, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(extractps, Mem, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(extrq, Xmm, Xmm)
_GEEK_ASM_INST_3X_IMPL(extrq, Xmm, Imm, Imm)
_GEEK_ASM_INST_2X_IMPL(haddpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(haddpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(haddps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(haddps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(hsubpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(hsubpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(hsubps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(hsubps, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(insertps, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(insertps, Xmm, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(insertq, Xmm, Xmm)
_GEEK_ASM_INST_4X_IMPL(insertq, Xmm, Xmm, Imm, Imm)
_GEEK_ASM_INST_2X_IMPL(lddqu, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(maskmovq, Mm, Mm, DS_ZDI)
_GEEK_ASM_INST_3X_IMPL(maskmovdqu, Xmm, Xmm, DS_ZDI)
_GEEK_ASM_INST_2X_IMPL(maxpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(maxpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(maxps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(maxps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(maxsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(maxsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(maxss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(maxss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(minpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(minpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(minps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(minps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(minsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(minsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(minss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(minss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movapd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movapd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movapd, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movaps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movaps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movaps, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movd, Mem, Mm)
_GEEK_ASM_INST_2X_IMPL(movd, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movd, Gp, Mm)
_GEEK_ASM_INST_2X_IMPL(movd, Gp, Xmm)
_GEEK_ASM_INST_2X_IMPL(movd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(movd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movd, Mm, Gp)
_GEEK_ASM_INST_2X_IMPL(movd, Xmm, Gp)
_GEEK_ASM_INST_2X_IMPL(movddup, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movddup, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movdq2q, Mm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movdqa, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movdqa, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movdqa, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movdqu, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movdqu, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movdqu, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movhlps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movhpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movhpd, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movhps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movhps, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movlhps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movlpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movlpd, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movlps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movlps, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movmskps, Gp, Xmm)
_GEEK_ASM_INST_2X_IMPL(movmskpd, Gp, Xmm)
_GEEK_ASM_INST_2X_IMPL(movntdq, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movntdqa, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movntpd, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movntps, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movntsd, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movntss, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movntq, Mem, Mm)
_GEEK_ASM_INST_2X_IMPL(movq, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(movq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movq, Mem, Mm)
_GEEK_ASM_INST_2X_IMPL(movq, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movq, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(movq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movq, Gp, Mm)
_GEEK_ASM_INST_2X_IMPL(movq, Gp, Xmm)
_GEEK_ASM_INST_2X_IMPL(movq, Mm, Gp)
_GEEK_ASM_INST_2X_IMPL(movq, Xmm, Gp)
_GEEK_ASM_INST_2X_IMPL(movq2dq, Xmm, Mm)
_GEEK_ASM_INST_2X_IMPL(movsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movsd, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movshdup, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movshdup, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movsldup, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movsldup, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movss, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movupd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movupd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movupd, Mem, Xmm)
_GEEK_ASM_INST_2X_IMPL(movups, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(movups, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(movups, Mem, Xmm)
_GEEK_ASM_INST_3X_IMPL(mpsadbw, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(mpsadbw, Xmm, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(mulpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(mulpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(mulps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(mulps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(mulsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(mulsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(mulss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(mulss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(orpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(orpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(orps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(orps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(packssdw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(packssdw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(packssdw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(packssdw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(packsswb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(packsswb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(packsswb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(packsswb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(packusdw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(packusdw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(packuswb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(packuswb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(packuswb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(packuswb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pabsb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pabsb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pabsb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pabsb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pabsd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pabsd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pabsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pabsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pabsw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pabsw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pabsw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pabsw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(paddb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(paddb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(paddd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(paddd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddq, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(paddq, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(paddq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddsb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(paddsb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddsb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(paddsb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddsw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(paddsw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddsw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(paddsw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddusb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(paddusb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddusb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(paddusb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddusw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(paddusw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddusw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(paddusw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(paddw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(paddw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(paddw, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(palignr, Mm, Mm, Imm)
_GEEK_ASM_INST_3X_IMPL(palignr, Mm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(palignr, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(palignr, Xmm, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(pand, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pand, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pand, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pand, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pandn, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pandn, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pandn, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pandn, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pavgb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pavgb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pavgb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pavgb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pavgw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pavgw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pavgw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pavgw, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(pblendvb, Xmm, Xmm, XMM0)
_GEEK_ASM_INST_3X_IMPL(pblendvb, Xmm, Mem, XMM0)
_GEEK_ASM_INST_3X_IMPL(pblendw, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pblendw, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(pclmulqdq, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pclmulqdq, Xmm, Mem, Imm)
_GEEK_ASM_INST_6X_IMPL(pcmpestri, Xmm, Xmm, Imm, Gp_ECX, Gp_EAX, Gp_EDX)
_GEEK_ASM_INST_6X_IMPL(pcmpestri, Xmm, Mem, Imm, Gp_ECX, Gp_EAX, Gp_EDX)
_GEEK_ASM_INST_6X_IMPL(pcmpestrm, Xmm, Xmm, Imm, XMM0, Gp_EAX, Gp_EDX)
_GEEK_ASM_INST_6X_IMPL(pcmpestrm, Xmm, Mem, Imm, XMM0, Gp_EAX, Gp_EDX)
_GEEK_ASM_INST_2X_IMPL(pcmpeqb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pcmpeqb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpeqb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pcmpeqb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpeqd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pcmpeqd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpeqd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pcmpeqd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpeqq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pcmpeqq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpeqw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pcmpeqw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpeqw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pcmpeqw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpgtb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pcmpgtb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpgtb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pcmpgtb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpgtd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pcmpgtd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpgtd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pcmpgtd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpgtq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pcmpgtq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpgtw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pcmpgtw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pcmpgtw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pcmpgtw, Xmm, Mem)
_GEEK_ASM_INST_4X_IMPL(pcmpistri, Xmm, Xmm, Imm, Gp_ECX)
_GEEK_ASM_INST_4X_IMPL(pcmpistri, Xmm, Mem, Imm, Gp_ECX)
_GEEK_ASM_INST_4X_IMPL(pcmpistrm, Xmm, Xmm, Imm, XMM0)
_GEEK_ASM_INST_4X_IMPL(pcmpistrm, Xmm, Mem, Imm, XMM0)
_GEEK_ASM_INST_3X_IMPL(pextrb, Gp, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pextrb, Mem, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pextrd, Gp, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pextrd, Mem, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pextrq, Gp, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pextrq, Mem, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pextrw, Gp, Mm, Imm)
_GEEK_ASM_INST_3X_IMPL(pextrw, Gp, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pextrw, Mem, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(phaddd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(phaddd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(phaddd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(phaddd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(phaddsw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(phaddsw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(phaddsw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(phaddsw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(phaddw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(phaddw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(phaddw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(phaddw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(phminposuw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(phminposuw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(phsubd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(phsubd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(phsubd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(phsubd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(phsubsw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(phsubsw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(phsubsw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(phsubsw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(phsubw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(phsubw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(phsubw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(phsubw, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(pinsrb, Xmm, Gp, Imm)
_GEEK_ASM_INST_3X_IMPL(pinsrb, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(pinsrd, Xmm, Gp, Imm)
_GEEK_ASM_INST_3X_IMPL(pinsrd, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(pinsrq, Xmm, Gp, Imm)
_GEEK_ASM_INST_3X_IMPL(pinsrq, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(pinsrw, Mm, Gp, Imm)
_GEEK_ASM_INST_3X_IMPL(pinsrw, Mm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(pinsrw, Xmm, Gp, Imm)
_GEEK_ASM_INST_3X_IMPL(pinsrw, Xmm, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(pmaddubsw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pmaddubsw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaddubsw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmaddubsw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaddwd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pmaddwd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaddwd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmaddwd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaxsb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmaxsb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaxsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmaxsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaxsw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pmaxsw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaxsw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmaxsw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaxub, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pmaxub, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaxub, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmaxub, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaxud, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmaxud, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmaxuw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmaxuw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pminsb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pminsb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pminsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pminsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pminsw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pminsw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pminsw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pminsw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pminub, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pminub, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pminub, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pminub, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pminud, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pminud, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pminuw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pminuw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovmskb, Gp, Mm)
_GEEK_ASM_INST_2X_IMPL(pmovmskb, Gp, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovsxbd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovsxbd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovsxbq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovsxbq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovsxbw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovsxbw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovsxdq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovsxdq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovsxwd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovsxwd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovsxwq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovsxwq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovzxbd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovzxbd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovzxbq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovzxbq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovzxbw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovzxbw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovzxdq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovzxdq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovzxwd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovzxwd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmovzxwq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmovzxwq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmuldq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmuldq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmulhrsw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pmulhrsw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmulhrsw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmulhrsw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmulhw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pmulhw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmulhw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmulhw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmulhuw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pmulhuw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmulhuw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmulhuw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmulld, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmulld, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmullw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pmullw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmullw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmullw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmuludq, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pmuludq, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pmuludq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pmuludq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(por, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(por, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(por, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(por, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psadbw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psadbw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psadbw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psadbw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pslld, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pslld, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pslld, Mm, Imm)
_GEEK_ASM_INST_2X_IMPL(pslld, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pslld, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pslld, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(pslldq, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(psllq, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psllq, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psllq, Mm, Imm)
_GEEK_ASM_INST_2X_IMPL(psllq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psllq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psllq, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(psllw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psllw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psllw, Mm, Imm)
_GEEK_ASM_INST_2X_IMPL(psllw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psllw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psllw, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(psrad, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psrad, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psrad, Mm, Imm)
_GEEK_ASM_INST_2X_IMPL(psrad, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psrad, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psrad, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(psraw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psraw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psraw, Mm, Imm)
_GEEK_ASM_INST_2X_IMPL(psraw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psraw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psraw, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(pshufb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pshufb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pshufb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pshufb, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(pshufd, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pshufd, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(pshufhw, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pshufhw, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(pshuflw, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(pshuflw, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(pshufw, Mm, Mm, Imm)
_GEEK_ASM_INST_3X_IMPL(pshufw, Mm, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(psignb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psignb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psignb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psignb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psignd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psignd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psignd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psignd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psignw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psignw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psignw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psignw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psrld, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psrld, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psrld, Mm, Imm)
_GEEK_ASM_INST_2X_IMPL(psrld, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psrld, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psrld, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(psrldq, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(psrlq, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psrlq, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psrlq, Mm, Imm)
_GEEK_ASM_INST_2X_IMPL(psrlq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psrlq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psrlq, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(psrlw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psrlw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psrlw, Mm, Imm)
_GEEK_ASM_INST_2X_IMPL(psrlw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psrlw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psrlw, Xmm, Imm)
_GEEK_ASM_INST_2X_IMPL(psubb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psubb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psubb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psubd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psubd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubq, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psubq, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psubq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubsb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psubsb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubsb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psubsb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubsw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psubsw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubsw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psubsw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubusb, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psubusb, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubusb, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psubusb, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubusw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psubusw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubusw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psubusw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(psubw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(psubw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(psubw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(ptest, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(ptest, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpckhbw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(punpckhbw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpckhbw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(punpckhbw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpckhdq, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(punpckhdq, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpckhdq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(punpckhdq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpckhqdq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(punpckhqdq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpckhwd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(punpckhwd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpckhwd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(punpckhwd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpcklbw, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(punpcklbw, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpcklbw, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(punpcklbw, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpckldq, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(punpckldq, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpckldq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(punpckldq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpcklqdq, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(punpcklqdq, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpcklwd, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(punpcklwd, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(punpcklwd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(punpcklwd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(pxor, Mm, Mm)
_GEEK_ASM_INST_2X_IMPL(pxor, Mm, Mem)
_GEEK_ASM_INST_2X_IMPL(pxor, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(pxor, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(rcpps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(rcpps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(rcpss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(rcpss, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(roundpd, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(roundpd, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(roundps, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(roundps, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(roundsd, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(roundsd, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(roundss, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(roundss, Xmm, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(rsqrtps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(rsqrtps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(rsqrtss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(rsqrtss, Xmm, Mem)
_GEEK_ASM_INST_3X_IMPL(shufpd, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(shufpd, Xmm, Mem, Imm)
_GEEK_ASM_INST_3X_IMPL(shufps, Xmm, Xmm, Imm)
_GEEK_ASM_INST_3X_IMPL(shufps, Xmm, Mem, Imm)
_GEEK_ASM_INST_2X_IMPL(sqrtpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(sqrtpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(sqrtps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(sqrtps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(sqrtsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(sqrtsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(sqrtss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(sqrtss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(subpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(subpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(subps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(subps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(subsd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(subsd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(subss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(subss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(ucomisd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(ucomisd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(ucomiss, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(ucomiss, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(unpckhpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(unpckhpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(unpckhps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(unpckhps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(unpcklpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(unpcklpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(unpcklps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(unpcklps, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(xorpd, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(xorpd, Xmm, Mem)
_GEEK_ASM_INST_2X_IMPL(xorps, Xmm, Xmm)
_GEEK_ASM_INST_2X_IMPL(xorps, Xmm, Mem)


Assembler::Error Assembler::db(uint8_t x, size_t repeat_count) { MAKE_RET(db(x, repeat_count)); }

Assembler::Error Assembler::dw(uint16_t x, size_t repeat_count) { MAKE_RET(dw(x, repeat_count)); }

Assembler::Error Assembler::dd(uint32_t x, size_t repeat_count) { MAKE_RET(dd(x, repeat_count)); }

Assembler::Error Assembler::dq(uint64_t x, size_t repeat_count) { MAKE_RET(dq(x, repeat_count)); }

Assembler::Error Assembler::Embed(const void* data, size_t data_size) { MAKE_RET(embed(data, data_size)); }

Assembler::Error Assembler::EmbedInt8(int8_t value, size_t repeat_count) { MAKE_RET(embedInt8(value, repeat_count)); }

Assembler::Error Assembler::EmbedUInt8(uint8_t value, size_t repeat_count) {
	MAKE_RET(embedUInt8(value, repeat_count));
}

Assembler::Error Assembler::EmbedInt16(int16_t value, size_t repeat_count) {
	MAKE_RET(embedInt16(value, repeat_count));
}

Assembler::Error Assembler::EmbedUInt16(uint16_t value, size_t repeat_count) {
	MAKE_RET(embedUInt16(value, repeat_count));
}

Assembler::Error Assembler::EmbedInt32(int32_t value, size_t repeat_count) {
	MAKE_RET(embedInt32(value, repeat_count));
}

Assembler::Error Assembler::EmbedUInt32(uint32_t value, size_t repeat_count) {
	MAKE_RET(embedUInt32(value, repeat_count));
}

Assembler::Error Assembler::EmbedInt64(int64_t value, size_t repeat_count) {
	MAKE_RET(embedInt64(value, repeat_count));
}

Assembler::Error Assembler::EmbedUInt64(uint64_t value, size_t repeat_count) {
	MAKE_RET(embedUInt64(value, repeat_count));
}

Assembler::Error Assembler::EmbedFloat(float value, size_t repeat_count) { MAKE_RET(embedFloat(value, repeat_count)); }

Assembler::Error Assembler::EmbedDouble(double value, size_t repeat_count) {
	MAKE_RET(embedDouble(value, repeat_count));
}

Assembler::Error Assembler::EmbedLabel(const asm_op::Label& label, size_t data_size) {
	MAKE_RET(embedLabel(ToAsmJit(label), data_size));
}

Assembler::Error Assembler::EmbedLabelDelta(const asm_op::Label& label, const asm_op::Label& base, size_t data_size) {
	MAKE_RET(embedLabelDelta(ToAsmJit(label), ToAsmJit(base), data_size));
}

Assembler::Error Assembler::Comment(const char* data, size_t size) {
	MAKE_RET(comment(data, size));
}
}
